ARRAYS

	Um array é uma estrutura de dados que permite armazenar uma coleção ordenada de elementos. Esses elementos podem ser de qualquer tipo, incluindo números, 
strings, objetos e até mesmo outros arrays. Em JavaScript, os arrays são objetos especiais que fornecem métodos e propriedades para manipular seus elementos
de forma eficiente.

	**Criando Arrays:**

	Existem várias maneiras de criar um array em JavaScript. Aqui estão algumas delas:

	1. **Usando colchetes vazios:** O método mais simples é criar um array usando colchetes `[]`. Você pode adicionar elementos separados por vírgulas 
entre os colchetes.

   		let meuArray = []; // Array vazio
   		let numeros = [1, 2, 3, 4, 5];
   		let nomes = ["Alice", "Bob", "Carol"];

	2. **Usando o construtor `Array`:** Você também pode criar arrays usando o construtor `Array`.

   		let meuArray = new Array(); // Array vazio
   		let numeros = new Array(1, 2, 3, 4, 5);
   		let nomes = new Array("Alice", "Bob", "Carol");

	**Acessando e Manipulando Elementos:**

	Você pode acessar os elementos de um array usando seu índice (começando de 0). Veja alguns exemplos:

		let numeros = [10, 20, 30, 40, 50];
		console.log(numeros[0]); // Saída: 10
		console.log(numeros[2]); // Saída: 30

		numeros[3] = 45; // Alterando o valor do elemento no índice 3
		console.log(numeros); // Saída: [10, 20, 30, 45, 50]

	**Métodos de Array:**

	Os arrays em JavaScript têm vários métodos úteis que podem ser usados para realizar operações comuns. Alguns exemplos incluem:

		- `push()`: Adiciona elementos ao final do array.
		- `pop()`: Remove o último elemento do array.
		- `shift()`: Remove o primeiro elemento do array.
		- `unshift()`: Adiciona elementos no início do array.
		- `splice()`: Permite adicionar, remover ou substituir elementos em posições específicas do array.
		- `concat()`: Combina dois ou mais arrays para criar um novo array.
		- `slice()`: Cria um novo array contendo uma cópia de parte do array original.

	**Iteração em Arrays:**

	Para percorrer os elementos de um array, você pode usar laços de repetição como `for` ou `forEach()`.

	Exemplo usando `for`:

		let numeros = [1, 2, 3, 4, 5];

		for (let i = 0; i < numeros.length; i++) {
  			console.log(numeros[i]);
		}

	Exemplo usando `forEach()`:

		let numeros = [1, 2, 3, 4, 5];

		numeros.forEach(function(numero) {
  			console.log(numero);
		});

	Essas são apenas algumas noções básicas sobre arrays em JavaScript. Há muitos outros conceitos e métodos poderosos relacionados aos arrays que você 
pode explorar à medida que se aprofunda no desenvolvimento web com JavaScript.